#server
server:
  # 项目contextPath，一般在正式发布版本中，我们不配置
  context-path: /boot
  # 该服务绑定IP地址，启动服务器时如本机不是该IP地址则抛出异常启动失败，只有特殊需求的情况下才配置
  #address: 192.168.0.101
  # 错误页，指定发生错误时，跳转的URL。请查看BasicErrorController源码便知
  error:
     path: /error
  # 服务端口
  port: 8080
  # session最大超时时间(分钟)，默认为30
  session:
    timeout: 60
  tomcat:
    # tomcat的URI编码
    uri-encoding: utf-8
    # tomcat最大线程数，默认为200
    max-threads: 1000
    # 存放Tomcat的日志、Dump等文件的临时文件夹，默认为系统的tmp文件夹（如：C:\Users\Shanhy\AppData\Local\Temp）
    basedir: F:/springboot-tomcat-tmp
    # 打开Tomcat的Access日志，并可以设置日志格式的方法：
    #server.tomcat.access-log-enabled=true
    #server.tomcat.access-log-pattern=
eureka:
   client:
     serviceUrl:
     #springCloud注册中心地址
      defaultZone: http://localhost:8888/eureka/
spring:
#注册服务名
    application:
        name: UserDemo
#datasource
    datasource:
        name: era
        url: jdbc:mysql://rm-uf6f2t74095fpp824o.mysql.rds.aliyuncs.com:3306/itqzk?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: itqzk
        password: rlC0RcvJBvXZjkKp+v16Iv0K6rXdvkxKqIndZ3sMwuMH/CAK1iEWYLXYJnM6dxT/ek+LuNV4zeHKK6kdYdFT1w==
        publickey: MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAODUaZka+N3QPtSZMQP7w0nYNvwyZhNCWHr+MXdMhiMHse1n+pUjR8eruHKUzc22rrLrw3GTvmQxUH3+iAr426UCAwEAAQ==
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 5
        minIdle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: SELECT 1 FROM DUAL
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        spring.datasource.filters: stat,wall,log4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
        debug: true
    mvc:
      view:
        prefix: /WEB-INF/jsp/
        suffix: .jsp
      static-path-pattern: /**
    resources:
      static-locations: classpath:/WEB-INF/resources/
    devtools:
      restart:
        #热部署生效
        enabled: true
        #设置重启的目录
        #additional-paths: src/main/java
        #classpath目录下的WEB-INF文件夹内容修改不重启
        exclude: WEB-INF/**
    #redis
    redis:
      # Redis服务器地址
      host: 
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password: 
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池中的最大空闲连接
        min-idle: 0
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最小空闲连接
        max-idle: 8
      # 连接超时时间（毫秒）
      timeout: 10000
# mybatis_config
mybatis:
    mapper-locations: classpath:mapper/*.xml
logging:
    config: classpath:config/logback-spring.xml
